version: '3.7'
services:
  localstack:
    container_name: localstack
    image: localstack/localstack:0.12.2
    ports:
        - "4566-4599:4566-4599"
        - "${PORT_WEB_UI-8087}:${PORT_WEB_UI-8087}"
    environment:
        - SERVICES=s3,dynamodb,cloudformation,sts
        - DEBUG=1
        - LOCALSTACK_HOSTNAME=localstack
        - DATA_DIR=${DATA_DIR- }
        - PORT_WEB_UI=${PORT_WEB_UI- }
        - DOCKER_HOST=unix:///var/run/docker.sock
        - DEFAULT_REGION=us-east-1
        - HOSTNAME_EXTERNAL=localstack
        - DATA_DIR=/tmp/localstack/data
    volumes:
        - "localstack-vol:/tmp/localstack"
    networks:
        - platform
  elasticsearch:
    image: elasticsearch:7.11.1
    container_name: elasticsearch
    environment:
      - node.name=es
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es
      - cluster.initial_master_nodes=es
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms250m -Xmx250m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-vol:/tmp/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - platform

  kibana:
    image: kibana:7.11.1
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es:9200
      ELASTICSEARCH_HOSTS: '["http://es:9200"]'
    networks:
      - platform

  zookeeper:
      image: wurstmeister/zookeeper
      networks:
      - platform
      ports:
      - 2181:2181
  kafka:
      image: wurstmeister/kafka:2.11-0.9.0.1
      networks:
      - platform
      environment:
        KAFKA_BROKER_ID: "0"
        KAFKA_LISTENERS: PLAINTEXT://:9092
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
        KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
        KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS: "60000"
      links:
      - "zookeeper"
      depends_on:
      - zookeeper
      ports:
      - 9092:9092
  redis:
    image: redis:6.2
    networks:
      - platform
    ports:
      - 6379:6379
    container_name: redis
  rickshaw:
    build:
      context: ${RICKSHAW_HOME}
    networks:
      - platform
    container_name: rickshaw
    environment:
      - LISTEN_PORT=3000
      - KAFKA_CONN=kafka:9092
      - ZK_CONN=zookeeper:2181
      - REDIS_HOST=redis
      - ENABLE_S3_STORAGE=true
    command: ["bash", "-c", "sleep 5 && node --max-old-space-size=256 src/app/app.js"]
    ports:
      - "3000:3000"
    depends_on:
      - kafka
      - redis
      - localstack
  grover:
    build:
      context: ${GROVER_HOME}
      args:
        NPM_TOKEN: "${NPM_TOKEN}"
    ports:
      - "1337:1337"
    networks:
      - platform


volumes:
  localstack-vol:
    driver: local
  es-vol:
    driver: local
  

networks:
  platform:
    driver: bridge
    external: true
  